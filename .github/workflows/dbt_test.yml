name: CI-Test

# Activar el flujo de trabajo en eventos de push o pull request a la rama main
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Permite ejecutar manualmente desde la interfaz de GitHub Actions

jobs:
  # Este trabajo ejecutará la configuración para generar la documentación de DBT
  build:
    runs-on: ubuntu-latest # El entorno en el que se ejecutarán los pasos

    steps:
      # Checkout del repositorio para acceder al código
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Instalar Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Instalar dependencias de DBT
      - name: Install DBT and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dbt
          dbt deps

      # Configurar el archivo profiles.yml para DBT (conexión a la base de datos)
      - name: Set up DBT profiles
        run: |
          dbt run --select dbt_artifacts
      # Ejecutar DBT models (esto genera el modelo de datos)
      - name: Run DBT models
        run: |
          dbt run --select dbt_artifacts

      # Generar la documentación de DBT
      - name: Generate DBT docs
        run: |
          dbt docs generate

      # Servir la documentación de DBT
      - name: Serve DBT docs
        run: |
          dbt docs serve &
          sleep 5
